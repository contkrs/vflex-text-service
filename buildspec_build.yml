version: 0.2
env:
  variables:
    REGION: us-east-1
    PIPELINE_ACCOUNT_NUMBER: 410997643304
    ECR_REPO_NAME: aa00002412-vflex-test-service-repo
    #twistlock_url: https://us-east1.cloud.twistlock.com/us-2-158315413
    #APP_NAME: pds-eks-hello-k8s
  #secrets-manager:
    #nexus_helm_repo_token: nexus_helm_repo_upload:nexus_helm_repo_token
    #github_token: pipelines-secrets:github-token
    #prisma_access_key: prisma_cloud_compute_ci_scan_keys:prisma_access_key
    #prisma_secret_key: prisma_cloud_compute_ci_scan_keys:prisma_secret_key
phases:
  install:
    commands:
      - echo Starting Install Phase
      - pip install yq
      ## Install Helm
      - echo Installing Helm
      - curl https://cgrepo.capgroup.com/repository/cgfiles/helm/helm-v3.7.2-linux-amd64.tar.gz --create-dirs --output ${TOOLS_DIR}/helm/helm.tar.gz
      - tar -xzf ${TOOLS_DIR}/helm/helm.tar.gz --strip 1 -C /usr/local/bin/ && ls -al /usr/local/bin
      - chmod +x /usr/local/bin/helm && helm version
      - export HELM_EXPERIMENTAL_OCI=1
      #Download TWISTCLI from Compute API
      #- chmod a+x twistcli_download.sh;
      #- ./twistcli_download.sh
      #- /tmp/twistlock-cli --version
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      ##Enable helm env variable to support OCI
      - export HELM_EXPERIMENTAL_OCI=1
      #Set regisry name 
      - REPOSITORY1_URI=$PIPELINE_ACCOUNT_NUMBER.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO_NAME
      - echo $REPOSITORY1_URI
      #Remove subshell 
      - $(aws ecr get-login --no-include-email --region $REGION --registry-ids $PIPELINE_ACCOUNT_NUMBER)
      #- $(aws ecr get-login-password --region $REGION1 | ${TOOLS_DIR}/helm/helm registry login --username AWS --password-stdin $REPOSITORY1_URI)
      - aws ecr get-login-password --region $REGION | helm registry login --username AWS --password-stdin $REPOSITORY1_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image....
      # Build Docker Image
      - docker build -t $REPOSITORY1_URI:latest ./Source
      - docker tag $REPOSITORY1_URI:latest $REPOSITORY1_URI:$IMAGE_TAG
      #Perform Twistlock Scan for vulnerabilities 
      #- /tmp/twistlock-cli images scan --user $prisma_access_key --password $prisma_secret_key --address $twistlock_url --ci $REPOSITORY1_URI:$IMAGE_TAG
      #- echo Increment Chart Helm Version
      - CURRENT_HELM_VERSION=$(yq -r .version ./helm-charts/Chart.yaml)
      #Append CodeBuild-Number to helm chart version
      - export NEW_HELM_VERSION=$CURRENT_HELM_VERSION-$BRANCH-$IMAGE_TAG
      #Set image tag in chart.yaml after build
      - yq -yi --arg tag $IMAGE_TAG '.image_tag = $tag' ./helm-charts/values.yaml
      #Set image repo in chart.yaml after build.  The helm chart will know which repository to pull the image from
      - yq -yi --arg repo $REPOSITORY1_URI '.image_repo = $repo' ./helm-charts/values.yaml
      - cat ./helm-charts/values.yaml      
      - echo $NEW_HELM_VERSION 
      - yq -yi --arg version $NEW_HELM_VERSION '.version = $version' ./helm-charts/Chart.yaml      
      - cat ./helm-charts/Chart.yaml
      #Package Helm Chart to upload to ECR
      - helm package ./helm-charts
      - ls -lrt
      #Retrieve name of helm chart from Chart.yaml. This will be used to push the helm chart to ECR Repository
      - HELM_CHART_NAME=$(yq -r .name ./helm-charts/Chart.yaml)
      - helm push $HELM_CHART_NAME-$NEW_HELM_VERSION.tgz oci://$PIPELINE_ACCOUNT_NUMBER.dkr.ecr.$REGION.amazonaws.com/
  post_build:
    commands:
      - echo Build completed on `date`+
      - echo Pushing the Docker images...
      - docker push $REPOSITORY1_URI:latest
      - docker push $REPOSITORY1_URI:$IMAGE_TAG
      - echo Ending post build on `date`
      - echo Ending post build on `date`
      # Create output artifact file that contains helm chart version to for deployment stages
      - printf '{"name":"'"$HELM_CHART_NAME"'","imageUri":"'"$REPOSITORY1_URI:$IMAGE_TAG"'","helm_chart_name":"'"$HELM_CHART_NAME"'", "helm_chart_repo":"'"$PIPELINE_ACCOUNT_NUMBER.dkr.ecr.$REGION.amazonaws.com/$HELM_CHART_NAME"'","helmChartVersion":"'"$NEW_HELM_VERSION"'" }\n' > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
    files: imagedefinitions.json
